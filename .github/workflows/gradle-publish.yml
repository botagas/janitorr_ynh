# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package


on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    if: |
      github.event_name != 'release' ||
      github.event.release.target_commitish == 'master' ||
      github.event.release.target_commitish == 'testing'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
    - name: Clone Janitorr Repository
      run: |
          git clone --depth 1 https://github.com/Schaka/janitorr.git
          cd janitorr
          sed -i 's|optional:file:/workspace/application.yml|optional:file:/var/www/janitorr/src/main/resources/application.yml|g' build.gradle.kts
          sed -i 's|optional:file:/workspace/application.yaml|optional:file:/var/www/janitorr/src/main/resources/application.yml|g' build.gradle.kts
          sed -i 's|optional:file:/config/application.yaml|optional:file:/var/www/janitorr/src/main/resources/application.yml|g' build.gradle.kts
    #- name: Setup Gradle 
    #  uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle
      run: |
        cd janitorr
        ./gradlew bootJar

    - name: Rename JAR for Release
      run: |
        cd janitorr/build/libs
        if [[ "${GITHUB_REF##*/}" == "testing" || "${GITHUB_REF##*/}" == "testing-native" ]]; then
          [ -f janitorr-testing.jar ] || mv janitorr-*.jar janitorr-testing.jar
        else
          [ -f janitorr-master.jar ] || mv janitorr-*.jar janitorr-master.jar
        fi

    - name: Set release jar name
      run: |
        if [[ "${GITHUB_REF##*/}" == "testing" || "${GITHUB_REF##*/}" == "testing-native" ]]; then
          echo "RELEASE_JAR_NAME=janitorr-testing.jar" >> $GITHUB_ENV
        else
          echo "RELEASE_JAR_NAME=janitorr-master.jar" >> $GITHUB_ENV
        fi

    - name: Set release tag name
      run: |
        REF_NAME="${GITHUB_REF##*/}"
        if [[ "$REF_NAME" == *-latest ]]; then
          echo "RELEASE_TAG_NAME=$REF_NAME" >> $GITHUB_ENV
        else
          echo "RELEASE_TAG_NAME=${REF_NAME}-latest" >> $GITHUB_ENV
        fi

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
#    - name: Publish to GitHub Packages
#      run: ./gradlew publish
#      env:
#        USERNAME: ${{ github.actor }}
#        TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload JAR to GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        files: janitorr/build/libs/${{ env.RELEASE_JAR_NAME }}
        tag_name: ${{ env.RELEASE_TAG_NAME }}
      env:
        USERNAME: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
