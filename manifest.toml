#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "janitorr"
name = "Janitorr"
description.en = "A cleanup tool for managing media files by integrating with services like Jellyseerr, Jellyfin, Radarr, and Sonarr."
version = "1.7.0~ynh3"
maintainers = ["botagas"]

[upstream]
license = "GPL-3.0-or-later"
code = "https://github.com/Schaka/janitorr"

[integration]
yunohost = ">= 11.2"
helpers_version = "2.1"
architectures = "all"
multi_instance = false
ldap = false
sso = false
disk = "600M"
ram.build = "4096M"
ram.runtime = "100M"

[install]
    [install.init_main_permission]
    type = "group"
    default = "visitors"

    [install.jellyfin_usage]
    ask.en = "Do you use Jellyfin?"
    help.en = "This disables communication with the mentioned service in Janitorr."
    type = "select"
    choices.true = "true"
    choices.false = "false"
    default = "false"

    [install.jellyseerr_usage]
    ask.en = "Do you use Jellyseerr?"
    help.en = "This disables communication with the mentioned service in Janitorr."
    type = "select"
    choices.true = "true"
    choices.false = "false"
    default = "false"

    [install.jellystat_usage]
    ask.en = "Do you use Jellystat?"
    help.en = "This disables communication with the mentioned service in Janitorr."
    type = "select"
    choices.true = "true"
    choices.false = "false"
    default = "false"

    [install.sonarr_usage]
    ask.en = "Do you use Sonarr?"
    help.en = "This disables communication with the mentioned service in Janitorr."
    type = "select"
    choices.true = "true"
    choices.false = "false"
    default = "false"

    [install.radarr_usage]
    ask.en = "Do you use Radarr?"
    help.en = "This disables communication with the mentioned service in Janitorr."
    type = "select"
    choices.true = "true"
    choices.false = "false"
    default = "false"
    
    [install.jellyfin_url]
    ask.en = "Enter the URL of your Jellyfin server."
    help.en = "This setting is fetched AUTOMATICALLY during install if Jellyfin is installed on YunoHost (leave as is). You can replace it if you are hosting this service on a different machine.\nSYNTAX: http://example:port"
    type = "string"
    default = ""
    optional = true

    [install.jellyseerr_url]
    ask.en = "Enter the URL of your Jellyseerr server."
    help.en = "This setting is fetched AUTOMATICALLY during install if Jellyseerr is installed on YunoHost (leave as is). You can replace it if you are hosting this service on a different machine.\nSYNTAX: http://example:port"
    type = "string"
    default = ""
    optional = true

    [install.jellystat_url]
    ask.en = "Enter the URL of your Jellystat server."
    help.en = "This setting is fetched AUTOMATICALLY during install if Jellystat is installed on YunoHost (leave as is). You can replace it if you are hosting this service on a different machine.\nSYNTAX: http://example:port"
    type = "string"
    default = ""
    optional = true

    [install.sonarr_url]
    ask.en = "Enter the URL of your Sonarr server."
    help.en = "This setting is fetched AUTOMATICALLY during install if Sonarr is installed on YunoHost (leave as is). You can replace it if you are hosting this service on a different machine.\nSYNTAX: http://example:port"
    type = "string"
    default = ""
    optional = true

    [install.radarr_url]
    ask.en = "Enter the URL of your Radarr server."
    help.en = "This setting is fetched AUTOMATICALLY during install if Radarr is installed on YunoHost (leave as is). You can replace it if you are hosting this service on a different machine.\nSYNTAX: http://example:port"
    type = "string"
    default = ""
    optional = true
    
    [install.jellyfin_api_key]
    ask.en = "Enter the API key for your Jellyfin server."
    help.en = "Janitorr requires you to create an API key (replace with API key). This is fetched AUTOMATICALLY ONLY IF you have Jellyseer installed and configured (leave as it is)."
    type = "string"
    default = ""
    optional = true

    [install.jellyfin_username]
    ask.en = "Enter the username for the Jellyfin user."
    help.en = "Janitorr requires a separate user for monitoring media."
    type = "string"
    default = ""

    [install.jellyfin_password]
    ask.en = "Enter the password for the Jellyfin user."
    type = "string"
    default = ""

    [install.leaving_soon_dir]
    ask.en = "Enter the path for the 'leaving soon' directory."
    help.en = "This is the path where the collection for Leaving Soon media will reside in."
    type = "string"
    default = "/home/yunohost.multimedia/share/leavingsoon"

    [install.media_server_leaving_soon_dir]
    ask.en = "Enter the path for the media server's 'leaving soon' directory."
    help.en = "If this is run in the same machine, keep it identical to the previous path."
    type = "string"
    default = "/home/yunohost.multimedia/share/leavingsoon"

    [install.free_space_check_dir]
    ask.en = "Enter the directory path for free space checks."
    help.en = "This is the path that will be used to determine deletion based on free space left."
    type = "string"
    default = "/"

    [install.dry_run]
    ask.en = "Enable dry run mode? (true/false)"
    help.en = "TRUE means nothing will be deleted."
    type = "select"
    choices.true = "true"
    choices.false = "false"
    default = "true"

    [install.whole_tv_show]
    ask.en = "Treat TV shows as a whole for deletion? (true/false)"
    type = "select"
    choices.true = "true"
    choices.false = "false"
    default = "false"

    [install.whole_show_seeding_check]
    ask.en = "Enable seeding checks for whole TV shows? (true/false)"
    type = "select"
    choices.true = "true"
    choices.false = "false"
    default = "false"

    [install.leaving_soon]
    ask.en = "Set the time duration for 'leaving soon' (e.g., 14d)."
    help.en = "The amount of time between creating the collection and actual deletion of the media."
    type = "string"
    default = "14d"

    [install.exclusion_tag]
    ask.en = "Enter the exclusion tag for media items."
    help.en = "Using this tag will prevent the media from deletion."
    type = "string"
    default = "janitorr_keep"

[resources]
    [resources.sources]
    [resources.sources.main]
    url = "https://github.com/Schaka/janitorr/archive/refs/tags/v1.7.2.tar.gz"
    sha256 = "7c0621e840840845b8d9de505a18e7fe46ca0421aab21a2b2e936cc2d7b78d77"
    branch = "main"
    autoupdate.strategy = "latest_github_tag"

    [resources.sources.jdk]
    amd64.url = "https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-23.0.1/graalvm-community-jdk-23.0.1_linux-x64_bin.tar.gz"
    amd64.sha256 = "e26a0a74064b1689c056b5f24d7cc3b271f57f576be063b139d27aafa1322951"
    autoupdate.strategy = "latest_github_release"
    autoupdate.version_regex = "jdk-(\\d+\\.\\d+\\.\\d+)"
    autoupdate.upstream = "https://github.com/graalvm/graalvm-ce-builds"
    autoupdate.asset.amd64 = "graalvm-community-jdk-.*_linux-x64_bin\\.tar\\.gz$"
    
    [resources.system_user]
    home = "/var/www/janitorr"

    [resources.install_dir]
    dir = "/var/www/janitorr"

#    [resources.permissions]
#    main.url = "/"

    [resources.ports]
    main.default = 8978

    [resources.apt]
    packages = "build-essential, zlib1g-dev"
