#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS AND COMMON FUNCTIONS
#=================================================
source /usr/share/yunohost/helpers
source _common.sh

#=================================================
# INSTALLATION SCRIPT
#=================================================

# Setup dir
ynh_print_info "Setting up directory..."
ynh_setup_source --dest_dir="$install_dir" --source_id="main"
ynh_setup_source --dest_dir="$install_dir/jdk" --source_id="jdk"
export JAVA_HOME="$install_dir/jdk"
export GRADLE_USER_HOME="$install_dir/.gradle"

ynh_print_info "Setting up variables..."
# Save user inputs from manifest into app settings
ynh_app_setting_set --app=$app --key=jellyfin_url --value="$jellyfin_url"
ynh_app_setting_set --app=$app --key=jellyfin_api_key --value="$jellyfin_api_key"
ynh_app_setting_set --app=$app --key=jellyfin_username --value="$jellyfin_username"
ynh_app_setting_set --app=$app --key=jellyfin_password --value="$jellyfin_password"
ynh_app_setting_set --app=$app --key=radarr_url --value="$radarr_url"
ynh_app_setting_set --app=$app --key=radarr_api_key --value="$radarr_api_key"
ynh_app_setting_set --app=$app --key=sonarr_url --value="$sonarr_url"
ynh_app_setting_set --app=$app --key=sonarr_api_key --value="$sonarr_api_key"
ynh_app_setting_set --app=$app --key=jellyseerr_url --value="$jellyseerr_url"
ynh_app_setting_set --app=$app --key=jellyseerr_api_key --value="$jellyseerr_api_key"
ynh_app_setting_set --app=$app --key=jellystat_url --value="$jellystat_url"
ynh_app_setting_set --app=$app --key=jellystat_api_key --value="$jellystat_api_key"
ynh_app_setting_set --app=$app --key=leaving_soon_dir --value="$leaving_soon_dir"
ynh_app_setting_set --app=$app --key=media_server_leaving_soon_dir --value="$media_server_leaving_soon_dir"
ynh_app_setting_set --app=$app --key=free_space_check_dir --value="$free_space_check_dir"
ynh_app_setting_set --app=$app --key=dry_run --value="$dry_run"
ynh_app_setting_set --app=$app --key=whole_tv_show --value="$whole_tv_show"
ynh_app_setting_set --app=$app --key=whole_show_seeding_check --value="$whole_show_seeding_check"
ynh_app_setting_set --app=$app --key=leaving_soon --value="$leaving_soon"
ynh_app_setting_set --app=$app --key=exclusion_tag --value="$exclusion_tag"

# Create necessary directories
# Add Janitorr to the multimedia group
ynh_print_info "Adding Janitorr to multimedia group..."
usermod -aG multimedia $app

# Create multimedia directories
ynh_print_info "Creating necessary directories..."
mkdir -p "/home/yunohost.multimedia/share/leavingsoon"

# Create application.yml using a template
ynh_print_info "Generating application.yml..."
cat > "$install_dir/src/main/resources/application.yml" <<EOL
server:
  port: $port

logging:
  level:
    com.github.schaka: INFO

file-system:
  access: true
  validate-seeding: true
  leaving-soon-dir: "$leaving_soon_dir"
  media-server-leaving-soon-dir: "$media_server_leaving_soon_dir"
  from-scratch: true
  free-space-check-dir: "$free_space_check_dir"

application:
  dry-run: $dry_run
  run-once: false
  whole-tv-show: $whole_tv_show
  whole-show-seeding-check: $whole_show_seeding_check
  leaving-soon: $leaving_soon
  exclusion-tag: "$exclusion_tag"

  media-deletion:
    enabled: true

clients:
  jellyfin:
    enabled: true
    url: "$jellyfin_url"
    api-key: "$jellyfin_api_key"
    username: "$jellyfin_username"
    password: "$jellyfin_password"
    delete: true
    leaving-soon-tv: "Shows (Leaving Soon)"
    leaving-soon-movies: "Movies (Leaving Soon)"
  radarr:
    enabled: true
    url: "$radarr_url"
    api-key: "$radarr_api_key"
    only-delete-files: false
  sonarr:
    enabled: true
    url: "$sonarr_url"
    api-key: "$sonarr_api_key"
    delete-empty-shows: true
    determine-age-by: most_recent

  jellyseerr:
    enabled: true
    url: "$jellyseerr_url"
    api-key: "$jellyseerr_api_key"
    match-server: false
  jellystat:
    enabled: true
    url: "$jellystat_url"
    api-key: "$jellystat_api_key"
EOL

ynh_print_info "Building the app from source..."
# Build the app
cd "$install_dir"
chown -R "$app:$app" "$install_dir"
ynh_safe_rm ".gradle"

echo "Contents of /var/www/janitorr:" && ls -la /var/www/janitorr
echo "Contents of gradle.properties:" && cat /var/www/janitorr/gradle.properties
echo "Version of project: " && ./gradlew properties | grep version
# ./gradlew processAot
# ./gradlew processTestAot
# ./gradlew build --stacktrace --info
# ./gradlew --gradle-user-home "$GRADLE_USER_HOME" clean bootJar
./gradlew nativeCompile --gradle-user-home "$GRADLE_USER_HOME" -P version=1.0.0
ynh_print_info "Adding systemd service..."
ynh_config_add_systemd

ynh_print_info "Adding nginx configuration..."
ynh_config_add_nginx

ynh_print_info "Starting service..."
ynh_systemctl --service="$app" --action="start"

ynh_print_info "Installation completed!"
